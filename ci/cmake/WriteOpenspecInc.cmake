# Usage:
#   include(WriteOpenspecInc)
#   write_openspec_inc(src/openspec.inc mf2005)

# Test if Fortran 2003 Standard stream I/O is supported
include(CheckFortranSourceCompiles)
check_fortran_source_compiles("
      PROGRAM test
        OPEN(UNIT=9,FORM='UNFORMATTED',ACCESS='STREAM')
      END PROGRAM
" FORTRAN_2003_STANDARD_IO)

if(${FORTRAN_2003_STANDARD_IO})
  set(FORTRAN_FORM_BINARY FALSE)
else()
  # Test if non-standard BINARY extension is supported
  include(CheckFortranSourceCompiles)
  check_fortran_source_compiles("
      PROGRAM test
        OPEN(UNIT=9,FORM='BINARY')
      END PROGRAM
  " FORTRAN_FORM_BINARY)
endif()

# Generate one of three files
if(${FORTRAN_2003_STANDARD_IO})
  set(OPENSPEC "\
C     Generated by CMake for Standard Fortran 2003
      CHARACTER*20 ACCESS,FORM,ACTION(2)
      DATA ACCESS/'STREAM'/
      DATA FORM/'UNFORMATTED'/
      DATA (ACTION(I),I=1,2)/'READ','READWRITE'/
")
elseif(${FORTRAN_FORM_BINARY})
  set(OPENSPEC "\
C     Generated by CMake for non-standard Fortran with BINARY extension
      CHARACTER*20 ACCESS,FORM,ACTION(2)
      DATA ACCESS/'SEQUENTIAL'/
      DATA FORM/'BINARY'/
      DATA (ACTION(I),I=1,2)/'READ','READWRITE'/
")
else()  # pre-2003 Fortran Standard
  set(OPENSPEC "\
C     Generated by CMake for pre-2003 Fortran Standard
      CHARACTER*20 ACCESS,FORM,ACTION(2)
      DATA ACCESS/'SEQUENTIAL'/
      DATA FORM/'UNFORMATTED'/
      DATA (ACTION(I),I=1,2)/'READ','READWRITE'/
")
endif()

macro(write_openspec_inc OPENSPEC_INC TARGET)
  message(STATUS "Writing configured ${OPENSPEC_INC} for ${TARGET}")
  file(WRITE ${CMAKE_CURRENT_BINARY_DIR}/${OPENSPEC_INC} ${OPENSPEC})
  target_include_directories(${TARGET} PRIVATE ${CMAKE_CURRENT_BINARY_DIR})
  # also (potentially) overwrite file in directory that contains the source files
  # TODO: is there any workaround to not modify source tree?
  file(WRITE ${OPENSPEC_INC} ${OPENSPEC})
endmacro()
